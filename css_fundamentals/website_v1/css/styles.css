/* 
Be aware of collapsing margins
Block elements: Block level elements will create a new line of content, stacking
on top of each other by default (e.g. p, h1, ul, div).


Inline elements: Inline elements stay within the flow of what's around them 
(e.g. links, strong).
 - you can only nest other inline elements in them (such as putting a link 
 inside a strong element).
 - They will only respect margin, padding, and bordes which are placed on the
 left or the right side, and not the top and bottom.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
specificity: the more specific the css selectors are, the higher the priority
from lowest to highest specificity:
 - element selector
 - class selector
 - id selector
this means a class selector will always overwrite an element selector

Approach: 
General rules get put on element selectors (e.g. body, headings, paragraphs, etc.)
Everything else gets a class

two selectors of equal value:
 - the selector that is defined last overwrites the selector that is defined first
 

*/


.card {
    
    background: #000;
    color: white;
    width: 560px;
    margin: 0 auto;
    padding: 45px;
}

h1, p {
    /* set margin top to zero. the margin gets added to the padding of the parent element (.card). */
    margin-top: 0;
}

h1 {
    font-size: 24px;
}

p {
    /* if no margin is set the margin of the element will be equal to the font-size.*/
    font-size: 18px;
}

a {
    color: black;
}


.button {
    /* style the buttons 
    display: inline-block*/
    display: inline-block;

    background: #FFE600;
    color: black;
    /* use padding to create the size of a button
       the padding left and right needs to be a bigger number than
       the padding on the top and bottom
       for example ration of 1:2.5 */
    padding: 15px 30px;
    /* inline-block elements:
        - elements stay inline, they can be next to each other
        - they can have have margins in all four directions */
    text-decoration: none;
    margin-bottom: 50px;
}

.button:hover {
    background-color: orange;
}

.accent-color {
    color: #FFE600;
}

.links {
    margin-top: 0;
    margin-bottom: 0;
}

/* strong {
    color: white;
}
 */




/* a:hover {
    color: gray;
}
 */

/*  the order of the css-rules matters
    the last css-rule wins */

/*  links have different states that can be styled
    a:link, a:visited, a:focus, a:hover, a:active 
    the states can be targeted with pseudo classes */
/* a:link, a:visited {
    color: #FFE600;
} */

/* a:focus {
    /* parts of a web page can be focused with tab
    its best practice to include a focus state  */
/*     color: aquamarine;
} */
/* 
a:hover {
    color: firebrick;
} */

/* a:active { */
    /* if you click on the link and hold you activate the link */
    /* color: plum;
} */